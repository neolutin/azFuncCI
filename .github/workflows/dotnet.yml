name: azFuncCI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SERVICE_HOST: winvmwithservice.domain.ext
  SERVICE_NAME: servicetostop
  ADMIN_NAME: svcadmin

jobs:
  terraformPack:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_version: 1.0
    - name: Replace env vars in file
      uses: falnyr/replace-env-vars-action@v1.2.1
      env:
        TERRAFORMSTORAGE_KEY: ${{ secrets.TERRAFORMSTORAGE_KEY }}
        AZURETENANT_ID: ${{ secrets.AZURETENANT_ID }}
        AZURESUSCRIPTION_ID: ${{ secrets.AZURESUSCRIPTION_ID }}
        TERRAFORMCLIENT_ID: ${{ secrets.TERRAFORMCLIENT_ID }}
        TERRAFORMCLIENT_SECRET: ${{ secrets.TERRAFORMCLIENT_SECRET }}
      with:
        filename: terraform/provider.tf
    - name: Upload terraform Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: terraform
        path: terraform
    - name: Init
      run: terraform init
      working-directory: terraform
    - name: Plan
      run: terraform plan -input=false -out='out.tfplan'
      working-directory: terraform

  dataApiBuild:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: DataApi
    - name: Build
      run: dotnet build --no-restore  -c Release
      working-directory: DataApi
    - name: Test
      run: dotnet test --no-build --verbosity normal -c Release
      working-directory: DataApi
    
    - name: Upload DataApi Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: DataApi
        path: DataApi/bin/Release/net5.0

  functionBuild:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: FunctionCompute
    - name: Build
      run: dotnet build --no-restore  -c Release
      working-directory: FunctionCompute
    - name: Test
      run: dotnet test --no-build --verbosity normal -c Release
      working-directory: FunctionCompute
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: FunctionCompute
        path: FunctionCompute/bin/Release/netcoreapp3.1

  deployInfra:
    environment:
      name: funcApiDev
    needs: terraformPack
    runs-on: ubuntu-latest
    steps:
    - name: Download terraform Artifact
      uses: actions/download-artifact@v2.0.10
      with:
        name: terraform
        path: terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_version: 1.0
    - name: Deploy
      run: terraform init && terraform plan -input=false -out='out.tfplan' && terraform apply out.tfplan
      working-directory: terraform

  deployDataApi:
    needs: [dataApiBuild, deployInfra]
    runs-on: ubuntu-latest
    steps:
    - name: Download DataApi Artifact
      uses: actions/download-artifact@v2.0.10
      with:
        name: DataApi
    # Issue with az login credentials, need further investigations
    # - uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}
    # - name: Azure WebApp
    #   uses: Azure/webapps-deploy@v2
    #   with:
    #     app-name: DataApi
    #     package: DataApi

  deployFunction:
    needs: [functionBuild, deployInfra]
    runs-on: ubuntu-latest
    steps:
    - name: Download FunctionCompute Artifact
      uses: actions/download-artifact@v2.0.10
      with:
        name: FunctionCompute
    # - name: Stop service befor deployment
    #   shell: pwsh
    #   run: |
    #     $securedString = "${{ secrets.ADMIN_FOR_HOST }}" | ConvertTo-SecureString -Force -AsPlainText
    #     [pscredential]$credential = New-Object System.Management.Automation.PSCredential (${{ env.ADMIN_NAME }}, $securedString)
    #     Invoke-Command -ComputerName ${{ env.SERVICE_HOST }} -Credential $credential -ScriptBlock { Stop-Service -Name ${{ env.SERVICE_NAME }} }
    # - uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}
    # - name: Azure Functions Action
    #   uses: Azure/functions-action@v1.4.4
    #   with:
    #     app-name: FunctionCompute
    #     package: FunctionCompute
    # - name: Start service befor deployment
    #   shell: pwsh
    #   run: |
    #     $securedString = "${{ secrets.ADMIN_FOR_HOST }}" | ConvertTo-SecureString -Force -AsPlainText
    #     [pscredential]$credential = New-Object System.Management.Automation.PSCredential (${{ env.ADMIN_NAME }}, $securedString)
    #     Invoke-Command -ComputerName ${{ env.SERVICE_HOST }} -Credential $credential -ScriptBlock { Start-Service -Name ${{ env.SERVICE_NAME }} }
